/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RetentionPolicyInitParameters struct {
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	Schedule *string `json:"schedule,omitempty" tf:"schedule,omitempty"`

	// +crossplane:generate:reference:type=github.com/rossigee/provider-harbor/apis/project/v1alpha1.Project
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Reference to a Project in project to populate scope.
	// +kubebuilder:validation:Optional
	ScopeRef *v1.Reference `json:"scopeRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate scope.
	// +kubebuilder:validation:Optional
	ScopeSelector *v1.Selector `json:"scopeSelector,omitempty" tf:"-"`
}

type RetentionPolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`

	Schedule *string `json:"schedule,omitempty" tf:"schedule,omitempty"`

	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type RetentionPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// +kubebuilder:validation:Optional
	Schedule *string `json:"schedule,omitempty" tf:"schedule,omitempty"`

	// +crossplane:generate:reference:type=github.com/rossigee/provider-harbor/apis/project/v1alpha1.Project
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Reference to a Project in project to populate scope.
	// +kubebuilder:validation:Optional
	ScopeRef *v1.Reference `json:"scopeRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate scope.
	// +kubebuilder:validation:Optional
	ScopeSelector *v1.Selector `json:"scopeSelector,omitempty" tf:"-"`
}

type RuleInitParameters struct {
	AlwaysRetain *bool `json:"alwaysRetain,omitempty" tf:"always_retain,omitempty"`

	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	MostRecentlyPulled *float64 `json:"mostRecentlyPulled,omitempty" tf:"most_recently_pulled,omitempty"`

	MostRecentlyPushed *float64 `json:"mostRecentlyPushed,omitempty" tf:"most_recently_pushed,omitempty"`

	NDaysSinceLastPull *float64 `json:"nDaysSinceLastPull,omitempty" tf:"n_days_since_last_pull,omitempty"`

	NDaysSinceLastPush *float64 `json:"nDaysSinceLastPush,omitempty" tf:"n_days_since_last_push,omitempty"`

	// Use doublestar pattern for path matching.
	RepoExcluding *string `json:"repoExcluding,omitempty" tf:"repo_excluding,omitempty"`

	// Use doublestar pattern for path matching.
	RepoMatching *string `json:"repoMatching,omitempty" tf:"repo_matching,omitempty"`

	// Use doublestar pattern for path matching.
	TagExcluding *string `json:"tagExcluding,omitempty" tf:"tag_excluding,omitempty"`

	// Use doublestar pattern for path matching.
	TagMatching *string `json:"tagMatching,omitempty" tf:"tag_matching,omitempty"`

	UntaggedArtifacts *bool `json:"untaggedArtifacts,omitempty" tf:"untagged_artifacts,omitempty"`
}

type RuleObservation struct {
	AlwaysRetain *bool `json:"alwaysRetain,omitempty" tf:"always_retain,omitempty"`

	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	MostRecentlyPulled *float64 `json:"mostRecentlyPulled,omitempty" tf:"most_recently_pulled,omitempty"`

	MostRecentlyPushed *float64 `json:"mostRecentlyPushed,omitempty" tf:"most_recently_pushed,omitempty"`

	NDaysSinceLastPull *float64 `json:"nDaysSinceLastPull,omitempty" tf:"n_days_since_last_pull,omitempty"`

	NDaysSinceLastPush *float64 `json:"nDaysSinceLastPush,omitempty" tf:"n_days_since_last_push,omitempty"`

	// Use doublestar pattern for path matching.
	RepoExcluding *string `json:"repoExcluding,omitempty" tf:"repo_excluding,omitempty"`

	// Use doublestar pattern for path matching.
	RepoMatching *string `json:"repoMatching,omitempty" tf:"repo_matching,omitempty"`

	// Use doublestar pattern for path matching.
	TagExcluding *string `json:"tagExcluding,omitempty" tf:"tag_excluding,omitempty"`

	// Use doublestar pattern for path matching.
	TagMatching *string `json:"tagMatching,omitempty" tf:"tag_matching,omitempty"`

	UntaggedArtifacts *bool `json:"untaggedArtifacts,omitempty" tf:"untagged_artifacts,omitempty"`
}

type RuleParameters struct {

	// +kubebuilder:validation:Optional
	AlwaysRetain *bool `json:"alwaysRetain,omitempty" tf:"always_retain,omitempty"`

	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// +kubebuilder:validation:Optional
	MostRecentlyPulled *float64 `json:"mostRecentlyPulled,omitempty" tf:"most_recently_pulled,omitempty"`

	// +kubebuilder:validation:Optional
	MostRecentlyPushed *float64 `json:"mostRecentlyPushed,omitempty" tf:"most_recently_pushed,omitempty"`

	// +kubebuilder:validation:Optional
	NDaysSinceLastPull *float64 `json:"nDaysSinceLastPull,omitempty" tf:"n_days_since_last_pull,omitempty"`

	// +kubebuilder:validation:Optional
	NDaysSinceLastPush *float64 `json:"nDaysSinceLastPush,omitempty" tf:"n_days_since_last_push,omitempty"`

	// Use doublestar pattern for path matching.
	// +kubebuilder:validation:Optional
	RepoExcluding *string `json:"repoExcluding,omitempty" tf:"repo_excluding,omitempty"`

	// Use doublestar pattern for path matching.
	// +kubebuilder:validation:Optional
	RepoMatching *string `json:"repoMatching,omitempty" tf:"repo_matching,omitempty"`

	// Use doublestar pattern for path matching.
	// +kubebuilder:validation:Optional
	TagExcluding *string `json:"tagExcluding,omitempty" tf:"tag_excluding,omitempty"`

	// Use doublestar pattern for path matching.
	// +kubebuilder:validation:Optional
	TagMatching *string `json:"tagMatching,omitempty" tf:"tag_matching,omitempty"`

	// +kubebuilder:validation:Optional
	UntaggedArtifacts *bool `json:"untaggedArtifacts,omitempty" tf:"untagged_artifacts,omitempty"`
}

// RetentionPolicySpec defines the desired state of RetentionPolicy
type RetentionPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RetentionPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RetentionPolicyInitParameters `json:"initProvider,omitempty"`
}

// RetentionPolicyStatus defines the observed state of RetentionPolicy.
type RetentionPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RetentionPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RetentionPolicy is the Schema for the RetentionPolicys API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,harbor}
type RetentionPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || (has(self.initProvider) && has(self.initProvider.rule))",message="spec.forProvider.rule is a required parameter"
	Spec   RetentionPolicySpec   `json:"spec"`
	Status RetentionPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RetentionPolicyList contains a list of RetentionPolicys
type RetentionPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RetentionPolicy `json:"items"`
}

// Repository type metadata.
var (
	RetentionPolicy_Kind             = "RetentionPolicy"
	RetentionPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RetentionPolicy_Kind}.String()
	RetentionPolicy_KindAPIVersion   = RetentionPolicy_Kind + "." + CRDGroupVersion.String()
	RetentionPolicy_GroupVersionKind = CRDGroupVersion.WithKind(RetentionPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&RetentionPolicy{}, &RetentionPolicyList{})
}
